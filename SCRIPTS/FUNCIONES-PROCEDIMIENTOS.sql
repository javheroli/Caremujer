--PROCEDIMIENTOS Y FUNCIONES ASOCIADAS A LOS REQUISITOS FUNCIONALES
--RF1
CREATE OR REPLACE PROCEDURE PR_TRABAJADORES_CLINICA 
IS
  CURSOR C IS
    SELECT * FROM TRABAJADORES NATURAL JOIN CLINICAS;
V_TRABAJADORES C%ROWTYPE;
BEGIN 
  OPEN C;
  FETCH C INTO V_TRABAJADORES;
  DBMS_OUTPUT.PUT_LINE( 'TRABAJADORES AGRUPADOS POR CLÍNICA EN LA QUE TRABAJAN:');
  DBMS_OUTPUT.PUT_LINE( RPAD('DNI:',15) || RPAD('NOMBRE:',25) || RPAD('APELLIDOS',35) || RPAD('EMAIL',25) || RPAD('OID_CLINICA',15) || RPAD('NOMBRE_CLINICA',50) || RPAD('DIRECCION',70));
  WHILE C%FOUND LOOP
    DBMS_OUTPUT.PUT_LINE( RPAD(V_TRABAJADORES.DNI,15) || RPAD(V_TRABAJADORES.NOMBRE,25) || RPAD(V_TRABAJADORES.APELLIDOS,35) || RPAD(V_TRABAJADORES.EMAIL,25) || RPAD(V_TRABAJADORES.OID_CLINICA,15) || RPAD(V_TRABAJADORES.NOMBRE_CLINICA,50) || RPAD(V_TRABAJADORES.DIRECCION,100));
  FETCH C INTO V_TRABAJADORES;
  END LOOP;
  CLOSE C;
END;
/

--RF2
CREATE OR REPLACE PROCEDURE PR_PACIENTES_CLINICA (V_OID_CLINICA IN CITAS.OID_CLINICA%TYPE)
IS
  CURSOR C IS 
     SELECT * FROM PACIENTES WHERE DNI IN (SELECT DNI_PACIENTE FROM CITAS WHERE OID_CLINICA = V_OID_CLINICA);
V_PACIENTES PACIENTES%ROWTYPE;
BEGIN 
  OPEN C;
  FETCH C INTO V_PACIENTES;
  DBMS_OUTPUT.PUT_LINE('PACIENTES CON CITA EN CLÍNICA DETERMINADA:');
  DBMS_OUTPUT.PUT_LINE(RPAD('DNI:',15) || RPAD('NOMBRE:',20) || RPAD('APELLIDOS:',30) || RPAD('EMAIL:',30) || RPAD('NUMEROSEGURO:',15) );
  WHILE C%FOUND LOOP
    DBMS_OUTPUT.PUT_LINE(RPAD(V_PACIENTES.DNI,15) || RPAD(V_PACIENTES.NOMBRE,20) || RPAD(V_PACIENTES.APELLIDOS,30) || RPAD(V_PACIENTES.EMAIL,30) || RPAD(V_PACIENTES.NUMEROSEGURO,10) );
  FETCH C INTO V_PACIENTES;
  END LOOP;
  CLOSE C;
END;
/

--RF3
CREATE OR REPLACE PROCEDURE PR_CITAS_DISPONIBLES (V_FECHA IN CITAS.FECHA%TYPE, V_OID_CLINICA IN CITAS.OID_CLINICA%TYPE, V_USUARIO_MEDICO IN CITAS.USUARIO_MEDICO%TYPE)
IS
  CURSOR C IS
    SELECT HORA FROM CITAS WHERE FECHA=V_FECHA AND OID_CLINICA = V_OID_CLINICA AND USUARIO_MEDICO = V_USUARIO_MEDICO AND DNI_PACIENTE IS NULL;
V_HORA CITAS.HORA%TYPE;
BEGIN
  OPEN C;
  FETCH C INTO V_HORA;
  DBMS_OUTPUT.PUT_LINE(RPAD('HORA:',20));
  WHILE C%FOUND LOOP
    DBMS_OUTPUT.PUT_LINE(RPAD(V_HORA,20));
  FETCH C INTO V_HORA;
  END LOOP;
  CLOSE C;
END;
/

--RF4
CREATE OR REPLACE PROCEDURE PR_CITAS_NO_DISPONIBLES (V_FECHA IN CITAS.FECHA%TYPE, V_OID_CLINICA IN CITAS.OID_CLINICA%TYPE)
IS
  CURSOR C IS
    SELECT * FROM CITAS WHERE FECHA=V_FECHA  AND OID_CLINICA = V_OID_CLINICA AND DNI_PACIENTE IS NOT NULL;
V_CITAS CITAS%ROWTYPE;
BEGIN
  OPEN C;
  FETCH C INTO V_CITAS;
  DBMS_OUTPUT.PUT_LINE(RPAD('HORA:',20)||RPAD('DNI_PACIENTE:',20)||RPAD('USUARIO_MEDICO:',20));
  WHILE C%FOUND LOOP 
    DBMS_OUTPUT.PUT_LINE(RPAD(V_CITAS.HORA,20)||RPAD(V_CITAS.DNI_PACIENTE,20)||RPAD(V_CITAS.USUARIO_MEDICO,20));
  FETCH C INTO V_CITAS;
  END LOOP;
  CLOSE C;
END;
/

--RF5
CREATE OR REPLACE PROCEDURE PR_CITAS_MEDICO (V_USUARIO IN CITAS.USUARIO_MEDICO%TYPE, V_FECHA IN CITAS.FECHA%TYPE)
IS
  CURSOR C IS 
    SELECT HORA,DNI_PACIENTE,OID_CLINICA FROM CITAS WHERE FECHA = V_FECHA AND USUARIO_MEDICO = V_USUARIO AND DNI_PACIENTE IS NOT NULL;
V_CITA C%ROWTYPE;
BEGIN
  OPEN C;
  FETCH C INTO V_CITA;
  DBMS_OUTPUT.PUT_LINE(RPAD('HORA:',20) || RPAD('DNI_PACIENTE:',20) || RPAD('OID_CLINICA:',20));
  WHILE C%FOUND LOOP
    DBMS_OUTPUT.PUT_LINE(RPAD(V_CITA.HORA,20) || RPAD(V_CITA.DNI_PACIENTE,20) || RPAD(V_CITA.OID_CLINICA,20));
  FETCH C INTO V_CITA;
  END LOOP;
  CLOSE C;
END;
/

--RF6
CREATE OR REPLACE PROCEDURE PR_MEDICOS_CLINICA 
IS
  CURSOR C IS
    SELECT OID_CLINICA,COUNT(*) FROM TRABAJAEN GROUP BY OID_CLINICA;
V_OID_CLINICA TRABAJAEN.OID_CLINICA%TYPE;
V_COUNT NUMBER;
BEGIN
  OPEN C;
  FETCH C INTO V_OID_CLINICA,V_COUNT;
  DBMS_OUTPUT.PUT_LINE(RPAD('OID_CLINICA:',20) || RPAD('Nº MÉDICOS:',20));
  WHILE C%FOUND LOOP
    DBMS_OUTPUT.PUT_LINE(RPAD(V_OID_CLINICA,20) || RPAD(V_COUNT,20));
  FETCH C INTO V_OID_CLINICA,V_COUNT;
  END LOOP;
  CLOSE C;
END;
/

--RF7
CREATE OR REPLACE PROCEDURE PR_MEDICOS_ESPECIALIDAD (V_OID_CLINICA IN TRABAJAEN.OID_CLINICA%TYPE)
IS
  CURSOR C IS
     SELECT USUARIO_MEDICO,NOMBRE,APELLIDOS,EMAIL,ESPECIALIDAD 
    FROM MEDICOS WHERE USUARIO_MEDICO IN (SELECT USUARIO_MEDICO FROM TRABAJAEN WHERE OID_CLINICA=V_OID_CLINICA) ;
V_USUARIO MEDICOS.USUARIO_MEDICO%TYPE;
V_NOMBRE MEDICOS.NOMBRE%TYPE;
V_APELLIDOS MEDICOS.APELLIDOS%TYPE;
V_EMAIL MEDICOS.EMAIL%TYPE;
V_ESPECIALIDAD MEDICOS.ESPECIALIDAD%TYPE;
BEGIN
 OPEN C;
 FETCH C INTO V_USUARIO,V_NOMBRE,V_APELLIDOS,V_EMAIL,V_ESPECIALIDAD;
 DBMS_OUTPUT.PUT_LINE(RPAD('USUARIO_MEDICO:',30) || RPAD('NOMBRE:',20) || RPAD('APELLIDOS:',30) || RPAD('EMAIL:',30) || RPAD('ESPECIALIDAD:',30));
 WHILE C%FOUND LOOP
    DBMS_OUTPUT.PUT_LINE(RPAD(V_USUARIO,30) || RPAD(V_NOMBRE,20) || RPAD(V_APELLIDOS,30) || RPAD(V_EMAIL,30) || RPAD(V_ESPECIALIDAD,30));
   FETCH C INTO V_USUARIO,V_NOMBRE,V_APELLIDOS,V_EMAIL,V_ESPECIALIDAD;
  END LOOP;
  CLOSE C;
END;
/

--RF8
CREATE OR REPLACE PROCEDURE PR_HISTORIALES (V_DNI_PACIENTE IN HISTORIALES.DNI_PACIENTE%TYPE)
IS
  CURSOR C IS
    SELECT * 
  FROM LINEASDEHISTORIAL 
  WHERE CODIGO_HISTORIAL IN (SELECT CODIGO FROM HISTORIALES WHERE DNI_PACIENTE = V_DNI_PACIENTE);
V_LINEASDEHISTORIAL LINEASDEHISTORIAL%ROWTYPE;
BEGIN
  OPEN C;
  FETCH C INTO V_LINEASDEHISTORIAL;
  DBMS_OUTPUT.PUT_LINE(RPAD('OID_LH:',20) || RPAD('FECHA:',20) || RPAD('OBSERVACIONES:',200) || RPAD('CODIGO_HISTORIAL:',20));
  WHILE C%FOUND LOOP
    DBMS_OUTPUT.PUT_LINE(RPAD(V_LINEASDEHISTORIAL.OID_LH,20) || RPAD(V_LINEASDEHISTORIAL.FECHA,20) || RPAD(V_LINEASDEHISTORIAL.OBSERVACIONES,200) || RPAD(V_LINEASDEHISTORIAL.CODIGO_HISTORIAL,20));
  FETCH C INTO V_LINEASDEHISTORIAL;
  END LOOP;
  CLOSE C;
END;
/

--RF9
CREATE OR REPLACE FUNCTION FN_SEGURO_PACIENTE (V_DNI_PACIENTE IN PACIENTES.DNI%TYPE)
RETURN NUMBER
IS
V_SEGURO PACIENTES.NUMEROSEGURO%TYPE;
BEGIN
  SELECT NUMEROSEGURO INTO V_SEGURO FROM PACIENTES WHERE DNI=V_DNI_PACIENTE;
  IF V_SEGURO = NULL THEN
    RETURN 'EL PACIENTE NO TIENE SEGURO';
  ELSE
    RETURN (V_SEGURO);
  END IF;
END;
/

--RF10
CREATE OR REPLACE FUNCTION FN_CITA_MAS_TARDE (V_USUARIO_MEDICO IN CITAS.USUARIO_MEDICO%TYPE, V_FECHA IN CITAS.FECHA%TYPE)
RETURN VARCHAR2
IS
V_HORA CITAS.HORA%TYPE;
BEGIN
    SELECT MAX(HORA) INTO V_HORA FROM CITAS WHERE FECHA=V_FECHA AND USUARIO_MEDICO=V_USUARIO_MEDICO AND DNI_PACIENTE IS NOT NULL;
    RETURN (V_HORA);
END;
/

--RF11
CREATE OR REPLACE PROCEDURE PR_MEDICO_SUPERVISA_HISTORIAL 
IS
  CURSOR C IS 
    SELECT USUARIO_MEDICO,NOMBRE,APELLIDOS,DNI,CODIGO,NOMBREPACIENTE,APELLIDOSPACIENTE,DNI_PACIENTE FROM MEDICOS NATURAL JOIN HISTORIALES;
  V_RES C%ROWTYPE;
BEGIN
  OPEN C;
  FETCH C INTO V_RES;
  DBMS_OUTPUT.PUT_LINE(RPAD('USUARIO_MEDICO:',20) || RPAD('NOMBRE:',20) || RPAD('APELLIDOS:',30) || RPAD('DNI:',20) || RPAD('NOMBREPACIENTE:',20) || RPAD('APELLIDOSPACIENTE:',30) || RPAD('DNI_PACIENTE:',20));
  WHILE C%FOUND LOOP
    DBMS_OUTPUT.PUT_LINE(RPAD(V_RES.USUARIO_MEDICO,20) || RPAD(V_RES.NOMBRE,20) || RPAD(V_RES.APELLIDOS,30) || RPAD(V_RES.DNI,20) || RPAD(V_RES.NOMBREPACIENTE,20) || RPAD(V_RES.APELLIDOSPACIENTE,30) || RPAD(V_RES.DNI_PACIENTE,20));
  FETCH C INTO V_RES;
  END LOOP;
  CLOSE C;
END;
/